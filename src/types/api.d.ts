/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/data/2.5/weather": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve current weather, hourly forecast, and daily forecast based on latitude and longitude. */
        get: operations["getWeatherData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        WeatherResponse: {
            current?: {
                lat?: number;
                lon?: number;
                tz?: string;
                /** Format: date */
                date?: string;
                units?: string;
                cloud_cover?: {
                    afternoon?: number;
                };
                humidity?: {
                    afternoon?: number;
                };
                precipitation?: {
                    total?: number;
                };
                temperature?: {
                    min?: number;
                    max?: number;
                    afternoon?: number;
                    night?: number;
                    evening?: number;
                    morning?: number;
                };
                pressure?: {
                    afternoon?: number;
                };
                wind?: {
                    max?: {
                        speed?: number;
                        direction?: number;
                    };
                };
            };
            hourly?: {
                lat?: number;
                lon?: number;
                tz?: string;
                /** Format: date */
                date?: string;
                units?: string;
                cloud_cover?: {
                    afternoon?: number;
                };
                humidity?: {
                    afternoon?: number;
                };
                precipitation?: {
                    total?: number;
                };
                temperature?: {
                    min?: number;
                    max?: number;
                    afternoon?: number;
                    night?: number;
                    evening?: number;
                    morning?: number;
                };
                pressure?: {
                    afternoon?: number;
                };
                wind?: {
                    max?: {
                        speed?: number;
                        direction?: number;
                    };
                };
            }[];
            daily?: {
                lat?: number;
                lon?: number;
                tz?: string;
                /** Format: date */
                date?: string;
                units?: string;
                cloud_cover?: {
                    afternoon?: number;
                };
                humidity?: {
                    afternoon?: number;
                };
                precipitation?: {
                    total?: number;
                };
                temperature?: {
                    min?: number;
                    max?: number;
                    afternoon?: number;
                    night?: number;
                    evening?: number;
                    morning?: number;
                };
                pressure?: {
                    afternoon?: number;
                };
                wind?: {
                    max?: {
                        speed?: number;
                        direction?: number;
                    };
                };
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getWeatherData: {
        parameters: {
            query: {
                /** @description Latitude of the location. */
                lat: number;
                /** @description Longitude of the location. */
                lon: number;
                /** @description API key for authentication. */
                appid: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response with weather data. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WeatherResponse"];
                };
            };
            /** @description Unauthorized due to missing or invalid API key. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
